{% for type in types.implementing.AutoBuildParameters %}
// MARK: {{ type.name }} API Parameters
// swiftlint:disable all
extension {{ type.name }} {
    var parameters: [String: Any] {
        switch self {
        {% for c in type.parameters.cases %}
        {% if c.associatedValues.count > 0 %}
        case let .{{ c.name }}({% for values in c.associatedValues %}{{ values.localName }}{% if values.localName != c.associatedValues.last.localName %}, {% endif %}{% endfor %}):
            var params = [String: Any]()
        {% for values in c.associatedValues %}
            params["{{ values.localName }}"] = {{ values.localName }}
        {% endfor %}
            return params
        {% else %}
        case .{{ c.name }}:
            return [:]
        {% endif %}
        {% endfor %}
        }
    }
}
{% endfor %}
